package upgrad;

import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class Driver {

    /**
     * Driver class main method
     *
     * @param args
     * @throws SQLException
     */
    public static void main(String[] args) throws SQLException {
        // MySql credentials
        String url = "jdbc:mysql://pgc-sd-bigdata.cyaielc9bmnf.us-east-1.rds.amazonaws.com:3306/pgcdata";
        String user = "student";
        String password = "STUDENT123";

        // MongoDB Configurations

        // Connection Default Value Initialization
        Connection sqlConnection = null;
        MongoClient mongoClient = null;

        try {
            // Creating database connections

            Class.forName("com.mysql.jdbc.Driver");
            sqlConnection = DriverManager.getConnection(url, user, password);

            if (sqlConnection != null) {
                System.out.println("Connected to the MYSQL database");
            }

            mongoClient = MongoClients.create("mongodb://ec2-34-226-124-237.compute-1.amazonaws.com");
            if (mongoClient != null)
                System.out.println("Connected to the Mongo DB" + mongoClient);

            MongoDatabase db = mongoClient.getDatabase("upgrad");
            db.getCollection("products").drop();
            MongoCollection<Document> collection = db.getCollection("products");
            System.out.println("Collection Created " + collection);

            // Import data into MongoDb
            Driver driver = new Driver();
            driver.importDataToMongoDB(sqlConnection, collection);

            // List all products in the inventory
            CRUDHelper.displayAllProducts(collection);

            // Display top 5 Mobiles
            CRUDHelper.displayTop5Mobiles(collection);

            // Display products ordered by their categories in Descending Order Without autogenerated Id
            CRUDHelper.displayCategoryOrderedProductsDescending(collection);

            // Display product count in each category
            CRUDHelper.displayProductCountByCategory(collection);

            // Display wired headphones
            CRUDHelper.displayWiredHeadphones(collection);
        } catch (Exception ex) {
            System.out.println("Got Exception.");
            ex.printStackTrace();
        } finally {
            // Close Connections
            sqlConnection.close();
            mongoClient.close();
        }
    }

    /**
     * Import Data from MYSQL to Mongodb
     *
     * @param mysqlConnection
     * @param productsCollection
     * @throws SQLException
     * @throws ClassNotFoundException
     */
    public void importDataToMongoDB(Connection mysqlConnection, MongoCollection<Document> productsCollection) throws SQLException, ClassNotFoundException {
        Statement statement = null;
        String sql = null;
        List<Document> productsList = new ArrayList<Document>();
        String[] categoryNames = {"Mobiles", "Cameras", "Headphones"};
        ResultSet resultSet = null;
        ResultSetMetaData metadata = null;
        int columnCount = 0;

        //Traverse 'categoryNames' array and import data from the three tables to a collection
        for (int i = 0; i < categoryNames.length; i++) {

            //Make corresponding sql query to the table based on the category name defined in the array
            if (categoryNames[i].equalsIgnoreCase("Mobiles"))
                sql = "select * from mobiles";
            else if (categoryNames[i].equalsIgnoreCase("Cameras"))
                sql = "select * from cameras";
            else
                sql = "select * from headphones";

            //Retrieve Result sets from mysql tables
            statement = mysqlConnection.createStatement();
            resultSet = statement.executeQuery(sql);

            //Get total Column's count of the table using metadata interface
            metadata = resultSet.getMetaData();
            columnCount = metadata.getColumnCount();

            //Traverse the obtained result set from which create documents to be imported to MongoDB
            while (resultSet.next()) {
                Document document = new Document("ProductId", resultSet.getString("ProductId"))
                        .append("Category", categoryNames[i]);
                for (int j = 2; j <= columnCount; j++) {
                    String columnName = metadata.getColumnName(j);
                    document.append(columnName, resultSet.getString(columnName));
                }
                productsList.add(document);
            }

            //Insert the documents created into mongodb
            productsCollection.insertMany(productsList);

            //Reset all variables before traversing the next table
            statement.close();
            resultSet = null;
            metadata = null;
            columnCount = 0;
            productsList.clear();
        }
    }
}